import {
  __toESM,
  require_react
} from "./chunk-OMFGQDFA.js";

// node_modules/@babel/runtime/helpers/esm/typeof.js
function _typeof(obj) {
  "@babel/helpers - typeof";
  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
    return typeof obj2;
  } : function(obj2) {
    return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
  }, _typeof(obj);
}

// node_modules/@babel/runtime/helpers/esm/toPrimitive.js
function _toPrimitive(input, hint) {
  if (_typeof(input) !== "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (_typeof(res) !== "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}

// node_modules/@babel/runtime/helpers/esm/toPropertyKey.js
function _toPropertyKey(arg) {
  var key = _toPrimitive(arg, "string");
  return _typeof(key) === "symbol" ? key : String(key);
}

// node_modules/@babel/runtime/helpers/esm/defineProperty.js
function _defineProperty(obj, key, value) {
  key = _toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}

// node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}

// node_modules/react-image/esm/Img.js
var import_react2 = __toESM(require_react());

// node_modules/react-image/esm/useImage-65024c8f.js
var import_react = __toESM(require_react());
var imagePromiseFactory = function(_ref) {
  var _ref$decode = _ref.decode, decode = _ref$decode === void 0 ? true : _ref$decode, _ref$crossOrigin = _ref.crossOrigin, crossOrigin = _ref$crossOrigin === void 0 ? "" : _ref$crossOrigin;
  return function(src) {
    return new Promise(function(resolve, reject) {
      var i = new Image();
      if (crossOrigin)
        i.crossOrigin = crossOrigin;
      i.onload = function() {
        decode && i.decode ? i.decode().then(resolve)["catch"](reject) : resolve();
      };
      i.onerror = reject;
      i.src = src;
    });
  };
};
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), true).forEach(function(key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
var removeBlankArrayElements = function removeBlankArrayElements2(a) {
  return a.filter(function(x) {
    return x;
  });
};
var stringToArray = function stringToArray2(x) {
  return Array.isArray(x) ? x : [x];
};
var cache = {};
var promiseFind = function promiseFind2(arr, promiseFactory) {
  var done = false;
  return new Promise(function(resolve, reject) {
    var queueNext = function queueNext2(src) {
      return promiseFactory(src).then(function() {
        done = true;
        resolve(src);
      });
    };
    arr.reduce(function(p, src) {
      return p["catch"](function() {
        if (!done)
          return queueNext(src);
      });
    }, queueNext(arr.shift()))["catch"](reject);
  });
};
function useImage(_ref) {
  var srcList = _ref.srcList, _ref$imgPromise = _ref.imgPromise, imgPromise = _ref$imgPromise === void 0 ? imagePromiseFactory({
    decode: true
  }) : _ref$imgPromise, _ref$useSuspense = _ref.useSuspense, useSuspense = _ref$useSuspense === void 0 ? true : _ref$useSuspense;
  var _useState = (0, import_react.useState)(false), setIsSettled = _useState[1];
  var sourceList = removeBlankArrayElements(stringToArray(srcList));
  var sourceKey = sourceList.join("");
  if (!cache[sourceKey]) {
    cache[sourceKey] = {
      promise: promiseFind(sourceList, imgPromise),
      cache: "pending",
      error: null
    };
  }
  if (cache[sourceKey].cache === "resolved") {
    return {
      src: cache[sourceKey].src,
      isLoading: false,
      error: null
    };
  }
  if (cache[sourceKey].cache === "rejected") {
    if (useSuspense)
      throw cache[sourceKey].error;
    return {
      isLoading: false,
      error: cache[sourceKey].error,
      src: void 0
    };
  }
  cache[sourceKey].promise.then(function(src) {
    cache[sourceKey] = _objectSpread(_objectSpread({}, cache[sourceKey]), {}, {
      cache: "resolved",
      src
    });
    if (!useSuspense)
      setIsSettled(sourceKey);
  })["catch"](function(error) {
    cache[sourceKey] = _objectSpread(_objectSpread({}, cache[sourceKey]), {}, {
      cache: "rejected",
      error
    });
    if (!useSuspense)
      setIsSettled(sourceKey);
  });
  if (useSuspense)
    throw cache[sourceKey].promise;
  return {
    isLoading: true,
    src: void 0,
    error: null
  };
}

// node_modules/react-image/esm/Img.js
var _excluded = ["decode", "src", "loader", "unloader", "container", "loaderContainer", "unloaderContainer", "imgPromise", "crossorigin", "useSuspense"];
function ownKeys2(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys2(Object(source), true).forEach(function(key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys2(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
var passthroughContainer = function passthroughContainer2(x) {
  return x;
};
function Img(_ref) {
  var _ref$decode = _ref.decode, decode = _ref$decode === void 0 ? true : _ref$decode, _ref$src = _ref.src, srcList = _ref$src === void 0 ? [] : _ref$src, _ref$loader = _ref.loader, loader = _ref$loader === void 0 ? null : _ref$loader, _ref$unloader = _ref.unloader, unloader = _ref$unloader === void 0 ? null : _ref$unloader, _ref$container = _ref.container, container = _ref$container === void 0 ? passthroughContainer : _ref$container, _ref$loaderContainer = _ref.loaderContainer, loaderContainer = _ref$loaderContainer === void 0 ? passthroughContainer : _ref$loaderContainer, _ref$unloaderContaine = _ref.unloaderContainer, unloaderContainer = _ref$unloaderContaine === void 0 ? passthroughContainer : _ref$unloaderContaine, imgPromise = _ref.imgPromise, crossorigin = _ref.crossorigin, _ref$useSuspense = _ref.useSuspense, useSuspense = _ref$useSuspense === void 0 ? false : _ref$useSuspense, imgProps = _objectWithoutPropertiesLoose(_ref, _excluded);
  imgPromise = imgPromise || imagePromiseFactory({
    decode,
    crossOrigin: crossorigin
  });
  var _useImage = useImage({
    srcList,
    imgPromise,
    useSuspense
  }), src = _useImage.src, isLoading = _useImage.isLoading;
  if (src)
    return container(import_react2.default.createElement("img", _objectSpread2({
      src
    }, imgProps)));
  if (!useSuspense && isLoading)
    return loaderContainer(loader);
  if (!useSuspense && unloader)
    return unloaderContainer(unloader);
  return null;
}

// node_modules/react-image/esm/index.js
var import_react3 = __toESM(require_react());
export {
  Img,
  useImage
};
//# sourceMappingURL=react-image.js.map
